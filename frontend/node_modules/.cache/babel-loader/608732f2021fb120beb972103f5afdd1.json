{"ast":null,"code":"import * as React from 'react';\nimport { forwardRef, useImperativeHandle, useRef, useEffect } from 'react';\nimport { applyReactStyle } from '../utils/apply-react-style';\nimport useControl from './use-control';\nconst GeolocateControl = forwardRef((props, ref) => {\n  const thisRef = useRef({\n    props\n  });\n  const ctrl = useControl(_ref => {\n    let {\n      mapLib\n    } = _ref;\n    const gc = new mapLib.GeolocateControl(props);\n    gc.on('geolocate', e => {\n      thisRef.current.props.onGeolocate?.(e);\n    });\n    gc.on('error', e => {\n      thisRef.current.props.onError?.(e);\n    });\n    gc.on('outofmaxbounds', e => {\n      thisRef.current.props.onOutOfMaxBounds?.(e);\n    });\n    gc.on('trackuserlocationstart', e => {\n      thisRef.current.props.onTrackUserLocationStart?.(e);\n    });\n    gc.on('trackuserlocationend', e => {\n      thisRef.current.props.onTrackUserLocationEnd?.(e);\n    });\n    return gc;\n  }, {\n    position: props.position\n  });\n  thisRef.current.props = props;\n  useImperativeHandle(ref, () => ({\n    trigger: () => ctrl.trigger()\n  }), []);\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n  return null;\n});\nGeolocateControl.displayName = 'GeolocateControl';\nexport default React.memo(GeolocateControl);","map":{"version":3,"sources":["/Users/genie/code/chiutzuning/find-museum-app/frontend/node_modules/react-map-gl/dist/esm/components/geolocate-control.js"],"names":["React","forwardRef","useImperativeHandle","useRef","useEffect","applyReactStyle","useControl","GeolocateControl","props","ref","thisRef","ctrl","mapLib","gc","on","e","current","onGeolocate","onError","onOutOfMaxBounds","onTrackUserLocationStart","onTrackUserLocationEnd","position","trigger","_container","style","displayName","memo"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,mBAArB,EAA0CC,MAA1C,EAAkDC,SAAlD,QAAmE,OAAnE;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,MAAMC,gBAAgB,GAAGN,UAAU,CAAC,CAACO,KAAD,EAAQC,GAAR,KAAgB;AAChD,QAAMC,OAAO,GAAGP,MAAM,CAAC;AAAEK,IAAAA;AAAF,GAAD,CAAtB;AACA,QAAMG,IAAI,GAAGL,UAAU,CAAC,QAAgB;AAAA,QAAf;AAAEM,MAAAA;AAAF,KAAe;AACpC,UAAMC,EAAE,GAAG,IAAID,MAAM,CAACL,gBAAX,CAA4BC,KAA5B,CAAX;AACAK,IAAAA,EAAE,CAACC,EAAH,CAAM,WAAN,EAAmBC,CAAC,IAAI;AACpBL,MAAAA,OAAO,CAACM,OAAR,CAAgBR,KAAhB,CAAsBS,WAAtB,GAAoCF,CAApC;AACH,KAFD;AAGAF,IAAAA,EAAE,CAACC,EAAH,CAAM,OAAN,EAAeC,CAAC,IAAI;AAChBL,MAAAA,OAAO,CAACM,OAAR,CAAgBR,KAAhB,CAAsBU,OAAtB,GAAgCH,CAAhC;AACH,KAFD;AAGAF,IAAAA,EAAE,CAACC,EAAH,CAAM,gBAAN,EAAwBC,CAAC,IAAI;AACzBL,MAAAA,OAAO,CAACM,OAAR,CAAgBR,KAAhB,CAAsBW,gBAAtB,GAAyCJ,CAAzC;AACH,KAFD;AAGAF,IAAAA,EAAE,CAACC,EAAH,CAAM,wBAAN,EAAgCC,CAAC,IAAI;AACjCL,MAAAA,OAAO,CAACM,OAAR,CAAgBR,KAAhB,CAAsBY,wBAAtB,GAAiDL,CAAjD;AACH,KAFD;AAGAF,IAAAA,EAAE,CAACC,EAAH,CAAM,sBAAN,EAA8BC,CAAC,IAAI;AAC/BL,MAAAA,OAAO,CAACM,OAAR,CAAgBR,KAAhB,CAAsBa,sBAAtB,GAA+CN,CAA/C;AACH,KAFD;AAGA,WAAOF,EAAP;AACH,GAlBsB,EAkBpB;AAAES,IAAAA,QAAQ,EAAEd,KAAK,CAACc;AAAlB,GAlBoB,CAAvB;AAmBAZ,EAAAA,OAAO,CAACM,OAAR,CAAgBR,KAAhB,GAAwBA,KAAxB;AACAN,EAAAA,mBAAmB,CAACO,GAAD,EAAM,OAAO;AAC5Bc,IAAAA,OAAO,EAAE,MAAMZ,IAAI,CAACY,OAAL;AADa,GAAP,CAAN,EAEf,EAFe,CAAnB;AAGAnB,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAC,IAAAA,eAAe,CAACM,IAAI,CAACa,UAAN,EAAkBhB,KAAK,CAACiB,KAAxB,CAAf;AACH,GAHQ,EAGN,CAACjB,KAAK,CAACiB,KAAP,CAHM,CAAT;AAIA,SAAO,IAAP;AACH,CA9BkC,CAAnC;AA+BAlB,gBAAgB,CAACmB,WAAjB,GAA+B,kBAA/B;AACA,eAAe1B,KAAK,CAAC2B,IAAN,CAAWpB,gBAAX,CAAf","sourcesContent":["import * as React from 'react';\nimport { forwardRef, useImperativeHandle, useRef, useEffect } from 'react';\nimport { applyReactStyle } from '../utils/apply-react-style';\nimport useControl from './use-control';\nconst GeolocateControl = forwardRef((props, ref) => {\n    const thisRef = useRef({ props });\n    const ctrl = useControl(({ mapLib }) => {\n        const gc = new mapLib.GeolocateControl(props);\n        gc.on('geolocate', e => {\n            thisRef.current.props.onGeolocate?.(e);\n        });\n        gc.on('error', e => {\n            thisRef.current.props.onError?.(e);\n        });\n        gc.on('outofmaxbounds', e => {\n            thisRef.current.props.onOutOfMaxBounds?.(e);\n        });\n        gc.on('trackuserlocationstart', e => {\n            thisRef.current.props.onTrackUserLocationStart?.(e);\n        });\n        gc.on('trackuserlocationend', e => {\n            thisRef.current.props.onTrackUserLocationEnd?.(e);\n        });\n        return gc;\n    }, { position: props.position });\n    thisRef.current.props = props;\n    useImperativeHandle(ref, () => ({\n        trigger: () => ctrl.trigger()\n    }), []);\n    useEffect(() => {\n        // @ts-ignore\n        applyReactStyle(ctrl._container, props.style);\n    }, [props.style]);\n    return null;\n});\nGeolocateControl.displayName = 'GeolocateControl';\nexport default React.memo(GeolocateControl);\n//# sourceMappingURL=geolocate-control.js.map"]},"metadata":{},"sourceType":"module"}