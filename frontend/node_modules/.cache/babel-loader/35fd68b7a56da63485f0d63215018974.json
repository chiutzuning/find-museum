{"ast":null,"code":"/* global document */\nimport * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport { useEffect, useMemo, useRef, useContext } from 'react';\nimport { applyReactStyle } from '../utils/apply-react-style';\nimport { MapContext } from './map';\nimport { arePointsEqual } from '../utils/deep-equal';\nconst defaultProps = {\n  draggable: false,\n  popup: null,\n  rotation: 0,\n  rotationAlignment: 'auto',\n  pitchAlignment: 'auto'\n};\n/* eslint-disable complexity,max-statements */\n\nfunction Marker(props) {\n  const {\n    map,\n    mapLib\n  } = useContext(MapContext);\n  const thisRef = useRef({\n    props\n  });\n  thisRef.current.props = props;\n  const marker = useMemo(() => {\n    let hasChildren = false;\n    React.Children.forEach(props.children, el => {\n      if (el) {\n        hasChildren = true;\n      }\n    });\n    const options = { ...props,\n      element: hasChildren ? document.createElement('div') : null\n    };\n    const mk = new mapLib.Marker(options).setLngLat([props.longitude, props.latitude]);\n    mk.getElement().addEventListener('click', e => {\n      thisRef.current.props.onClick?.({\n        type: 'click',\n        target: mk,\n        originalEvent: e\n      });\n    });\n    mk.on('dragstart', e => {\n      const evt = e;\n      evt.lngLat = marker.getLngLat();\n      thisRef.current.props.onDragStart?.(evt);\n    });\n    mk.on('drag', e => {\n      const evt = e;\n      evt.lngLat = marker.getLngLat();\n      thisRef.current.props.onDrag?.(evt);\n    });\n    mk.on('dragend', e => {\n      const evt = e;\n      evt.lngLat = marker.getLngLat();\n      thisRef.current.props.onDragEnd?.(evt);\n    });\n    return mk;\n  }, []);\n  useEffect(() => {\n    marker.addTo(map.getMap());\n    return () => {\n      marker.remove();\n    };\n  }, []);\n  useEffect(() => {\n    applyReactStyle(marker.getElement(), props.style);\n  }, [props.style]);\n\n  if (marker.getLngLat().lng !== props.longitude || marker.getLngLat().lat !== props.latitude) {\n    marker.setLngLat([props.longitude, props.latitude]);\n  }\n\n  if (props.offset && !arePointsEqual(marker.getOffset(), props.offset)) {\n    marker.setOffset(props.offset);\n  }\n\n  if (marker.isDraggable() !== props.draggable) {\n    marker.setDraggable(props.draggable);\n  }\n\n  if (marker.getRotation() !== props.rotation) {\n    marker.setRotation(props.rotation);\n  }\n\n  if (marker.getRotationAlignment() !== props.rotationAlignment) {\n    marker.setRotationAlignment(props.rotationAlignment);\n  }\n\n  if (marker.getPitchAlignment() !== props.pitchAlignment) {\n    marker.setPitchAlignment(props.pitchAlignment);\n  }\n\n  if (marker.getPopup() !== props.popup) {\n    marker.setPopup(props.popup);\n  }\n\n  return createPortal(props.children, marker.getElement());\n}\n\nMarker.defaultProps = defaultProps; // @ts-ignore\n\nexport default React.memo(Marker);","map":{"version":3,"sources":["/Users/genie/code/chiutzuning/find-museum-app/frontend/node_modules/react-map-gl/dist/esm/components/marker.js"],"names":["React","createPortal","useEffect","useMemo","useRef","useContext","applyReactStyle","MapContext","arePointsEqual","defaultProps","draggable","popup","rotation","rotationAlignment","pitchAlignment","Marker","props","map","mapLib","thisRef","current","marker","hasChildren","Children","forEach","children","el","options","element","document","createElement","mk","setLngLat","longitude","latitude","getElement","addEventListener","e","onClick","type","target","originalEvent","on","evt","lngLat","getLngLat","onDragStart","onDrag","onDragEnd","addTo","getMap","remove","style","lng","lat","offset","getOffset","setOffset","isDraggable","setDraggable","getRotation","setRotation","getRotationAlignment","setRotationAlignment","getPitchAlignment","setPitchAlignment","getPopup","setPopup","memo"],"mappings":"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","sourcesContent":["/* global document */\nimport * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport { useEffect, useMemo, useRef, useContext } from 'react';\nimport { applyReactStyle } from '../utils/apply-react-style';\nimport { MapContext } from './map';\nimport { arePointsEqual } from '../utils/deep-equal';\nconst defaultProps = {\n    draggable: false,\n    popup: null,\n    rotation: 0,\n    rotationAlignment: 'auto',\n    pitchAlignment: 'auto'\n};\n/* eslint-disable complexity,max-statements */\nfunction Marker(props) {\n    const { map, mapLib } = useContext(MapContext);\n    const thisRef = useRef({ props });\n    thisRef.current.props = props;\n    const marker = useMemo(() => {\n        let hasChildren = false;\n        React.Children.forEach(props.children, el => {\n            if (el) {\n                hasChildren = true;\n            }\n        });\n        const options = {\n            ...props,\n            element: hasChildren ? document.createElement('div') : null\n        };\n        const mk = new mapLib.Marker(options).setLngLat([props.longitude, props.latitude]);\n        mk.getElement().addEventListener('click', (e) => {\n            thisRef.current.props.onClick?.({\n                type: 'click',\n                target: mk,\n                originalEvent: e\n            });\n        });\n        mk.on('dragstart', e => {\n            const evt = e;\n            evt.lngLat = marker.getLngLat();\n            thisRef.current.props.onDragStart?.(evt);\n        });\n        mk.on('drag', e => {\n            const evt = e;\n            evt.lngLat = marker.getLngLat();\n            thisRef.current.props.onDrag?.(evt);\n        });\n        mk.on('dragend', e => {\n            const evt = e;\n            evt.lngLat = marker.getLngLat();\n            thisRef.current.props.onDragEnd?.(evt);\n        });\n        return mk;\n    }, []);\n    useEffect(() => {\n        marker.addTo(map.getMap());\n        return () => {\n            marker.remove();\n        };\n    }, []);\n    useEffect(() => {\n        applyReactStyle(marker.getElement(), props.style);\n    }, [props.style]);\n    if (marker.getLngLat().lng !== props.longitude || marker.getLngLat().lat !== props.latitude) {\n        marker.setLngLat([props.longitude, props.latitude]);\n    }\n    if (props.offset && !arePointsEqual(marker.getOffset(), props.offset)) {\n        marker.setOffset(props.offset);\n    }\n    if (marker.isDraggable() !== props.draggable) {\n        marker.setDraggable(props.draggable);\n    }\n    if (marker.getRotation() !== props.rotation) {\n        marker.setRotation(props.rotation);\n    }\n    if (marker.getRotationAlignment() !== props.rotationAlignment) {\n        marker.setRotationAlignment(props.rotationAlignment);\n    }\n    if (marker.getPitchAlignment() !== props.pitchAlignment) {\n        marker.setPitchAlignment(props.pitchAlignment);\n    }\n    if (marker.getPopup() !== props.popup) {\n        marker.setPopup(props.popup);\n    }\n    return createPortal(props.children, marker.getElement());\n}\nMarker.defaultProps = defaultProps;\n// @ts-ignore\nexport default React.memo(Marker);\n//# sourceMappingURL=marker.js.map"]},"metadata":{},"sourceType":"module"}