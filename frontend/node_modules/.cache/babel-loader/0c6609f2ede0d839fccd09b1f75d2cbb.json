{"ast":null,"code":"/**\n * Capture a transform's current state\n * @param transform\n * @returns descriptor of the view state\n */\nexport function transformToViewState(tr) {\n  return {\n    longitude: tr.center.lng,\n    latitude: tr.center.lat,\n    zoom: tr.zoom,\n    pitch: tr.pitch,\n    bearing: tr.bearing,\n    padding: tr.padding\n  };\n}\n/* eslint-disable complexity */\n\n/**\n * Mutate a transform to match the given view state\n * @param transform\n * @param viewState\n * @returns true if the transform has changed\n */\n\nexport function applyViewStateToTransform(tr, props) {\n  const v = props.viewState || props;\n  let changed = false;\n\n  if ('longitude' in v && 'latitude' in v) {\n    const center = tr.center; // @ts-ignore\n\n    tr.center = new center.constructor(v.longitude, v.latitude);\n    changed = changed || center !== tr.center;\n  }\n\n  if ('zoom' in v) {\n    const zoom = tr.zoom;\n    tr.zoom = v.zoom;\n    changed = changed || zoom !== tr.zoom;\n  }\n\n  if ('bearing' in v) {\n    const bearing = tr.bearing;\n    tr.bearing = v.bearing;\n    changed = changed || bearing !== tr.bearing;\n  }\n\n  if ('pitch' in v) {\n    const pitch = tr.pitch;\n    tr.pitch = v.pitch;\n    changed = changed || pitch !== tr.pitch;\n  }\n\n  if (v.padding && !tr.isPaddingEqual(v.padding)) {\n    changed = true;\n    tr.padding = v.padding;\n  }\n\n  return changed;\n}","map":{"version":3,"sources":["/Users/genie/code/chiutzuning/find-museum-app/frontend/node_modules/react-map-gl/dist/esm/utils/transform.js"],"names":["transformToViewState","tr","longitude","center","lng","latitude","lat","zoom","pitch","bearing","padding","applyViewStateToTransform","props","v","viewState","changed","constructor","isPaddingEqual"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,oBAAT,CAA8BC,EAA9B,EAAkC;AACrC,SAAO;AACHC,IAAAA,SAAS,EAAED,EAAE,CAACE,MAAH,CAAUC,GADlB;AAEHC,IAAAA,QAAQ,EAAEJ,EAAE,CAACE,MAAH,CAAUG,GAFjB;AAGHC,IAAAA,IAAI,EAAEN,EAAE,CAACM,IAHN;AAIHC,IAAAA,KAAK,EAAEP,EAAE,CAACO,KAJP;AAKHC,IAAAA,OAAO,EAAER,EAAE,CAACQ,OALT;AAMHC,IAAAA,OAAO,EAAET,EAAE,CAACS;AANT,GAAP;AAQH;AACD;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,yBAAT,CAAmCV,EAAnC,EAAuCW,KAAvC,EAA8C;AACjD,QAAMC,CAAC,GAAGD,KAAK,CAACE,SAAN,IAAmBF,KAA7B;AACA,MAAIG,OAAO,GAAG,KAAd;;AACA,MAAI,eAAeF,CAAf,IAAoB,cAAcA,CAAtC,EAAyC;AACrC,UAAMV,MAAM,GAAGF,EAAE,CAACE,MAAlB,CADqC,CAErC;;AACAF,IAAAA,EAAE,CAACE,MAAH,GAAY,IAAIA,MAAM,CAACa,WAAX,CAAuBH,CAAC,CAACX,SAAzB,EAAoCW,CAAC,CAACR,QAAtC,CAAZ;AACAU,IAAAA,OAAO,GAAGA,OAAO,IAAIZ,MAAM,KAAKF,EAAE,CAACE,MAAnC;AACH;;AACD,MAAI,UAAUU,CAAd,EAAiB;AACb,UAAMN,IAAI,GAAGN,EAAE,CAACM,IAAhB;AACAN,IAAAA,EAAE,CAACM,IAAH,GAAUM,CAAC,CAACN,IAAZ;AACAQ,IAAAA,OAAO,GAAGA,OAAO,IAAIR,IAAI,KAAKN,EAAE,CAACM,IAAjC;AACH;;AACD,MAAI,aAAaM,CAAjB,EAAoB;AAChB,UAAMJ,OAAO,GAAGR,EAAE,CAACQ,OAAnB;AACAR,IAAAA,EAAE,CAACQ,OAAH,GAAaI,CAAC,CAACJ,OAAf;AACAM,IAAAA,OAAO,GAAGA,OAAO,IAAIN,OAAO,KAAKR,EAAE,CAACQ,OAApC;AACH;;AACD,MAAI,WAAWI,CAAf,EAAkB;AACd,UAAML,KAAK,GAAGP,EAAE,CAACO,KAAjB;AACAP,IAAAA,EAAE,CAACO,KAAH,GAAWK,CAAC,CAACL,KAAb;AACAO,IAAAA,OAAO,GAAGA,OAAO,IAAIP,KAAK,KAAKP,EAAE,CAACO,KAAlC;AACH;;AACD,MAAIK,CAAC,CAACH,OAAF,IAAa,CAACT,EAAE,CAACgB,cAAH,CAAkBJ,CAAC,CAACH,OAApB,CAAlB,EAAgD;AAC5CK,IAAAA,OAAO,GAAG,IAAV;AACAd,IAAAA,EAAE,CAACS,OAAH,GAAaG,CAAC,CAACH,OAAf;AACH;;AACD,SAAOK,OAAP;AACH","sourcesContent":["/**\n * Capture a transform's current state\n * @param transform\n * @returns descriptor of the view state\n */\nexport function transformToViewState(tr) {\n    return {\n        longitude: tr.center.lng,\n        latitude: tr.center.lat,\n        zoom: tr.zoom,\n        pitch: tr.pitch,\n        bearing: tr.bearing,\n        padding: tr.padding\n    };\n}\n/* eslint-disable complexity */\n/**\n * Mutate a transform to match the given view state\n * @param transform\n * @param viewState\n * @returns true if the transform has changed\n */\nexport function applyViewStateToTransform(tr, props) {\n    const v = props.viewState || props;\n    let changed = false;\n    if ('longitude' in v && 'latitude' in v) {\n        const center = tr.center;\n        // @ts-ignore\n        tr.center = new center.constructor(v.longitude, v.latitude);\n        changed = changed || center !== tr.center;\n    }\n    if ('zoom' in v) {\n        const zoom = tr.zoom;\n        tr.zoom = v.zoom;\n        changed = changed || zoom !== tr.zoom;\n    }\n    if ('bearing' in v) {\n        const bearing = tr.bearing;\n        tr.bearing = v.bearing;\n        changed = changed || bearing !== tr.bearing;\n    }\n    if ('pitch' in v) {\n        const pitch = tr.pitch;\n        tr.pitch = v.pitch;\n        changed = changed || pitch !== tr.pitch;\n    }\n    if (v.padding && !tr.isPaddingEqual(v.padding)) {\n        changed = true;\n        tr.padding = v.padding;\n    }\n    return changed;\n}\n//# sourceMappingURL=transform.js.map"]},"metadata":{},"sourceType":"module"}