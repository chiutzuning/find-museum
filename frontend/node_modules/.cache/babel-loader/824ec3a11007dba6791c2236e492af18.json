{"ast":null,"code":"import * as React from 'react';\nimport { useEffect } from 'react';\nimport { applyReactStyle } from '../utils/apply-react-style';\nimport useControl from './use-control';\nconst defaultProps = {\n  unit: 'metric',\n  maxWidth: 100\n};\n\nfunction ScaleControl(props) {\n  const ctrl = useControl(_ref => {\n    let {\n      mapLib\n    } = _ref;\n    return new mapLib.ScaleControl(props);\n  }, {\n    position: props.position\n  }); // @ts-ignore\n\n  if (ctrl.options.unit !== props.unit || ctrl.options.maxWidth !== props.maxWidth) {\n    // @ts-ignore\n    ctrl.options.maxWidth = props.maxWidth; // This method will trigger an update\n\n    ctrl.setUnit(props.unit);\n  }\n\n  useEffect(() => {\n    // @ts-ignore\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n  return null;\n}\n\nScaleControl.defaultProps = defaultProps;\nexport default React.memo(ScaleControl);","map":{"version":3,"sources":["/Users/genie/code/chiutzuning/find-museum-app/frontend/node_modules/react-map-gl/dist/esm/components/scale-control.js"],"names":["React","useEffect","applyReactStyle","useControl","defaultProps","unit","maxWidth","ScaleControl","props","ctrl","mapLib","position","options","setUnit","_container","style","memo"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,QADW;AAEjBC,EAAAA,QAAQ,EAAE;AAFO,CAArB;;AAIA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,QAAMC,IAAI,GAAGN,UAAU,CAAC;AAAA,QAAC;AAAEO,MAAAA;AAAF,KAAD;AAAA,WAAgB,IAAIA,MAAM,CAACH,YAAX,CAAwBC,KAAxB,CAAhB;AAAA,GAAD,EAAiD;AACpEG,IAAAA,QAAQ,EAAEH,KAAK,CAACG;AADoD,GAAjD,CAAvB,CADyB,CAIzB;;AACA,MAAIF,IAAI,CAACG,OAAL,CAAaP,IAAb,KAAsBG,KAAK,CAACH,IAA5B,IAAoCI,IAAI,CAACG,OAAL,CAAaN,QAAb,KAA0BE,KAAK,CAACF,QAAxE,EAAkF;AAC9E;AACAG,IAAAA,IAAI,CAACG,OAAL,CAAaN,QAAb,GAAwBE,KAAK,CAACF,QAA9B,CAF8E,CAG9E;;AACAG,IAAAA,IAAI,CAACI,OAAL,CAAaL,KAAK,CAACH,IAAnB;AACH;;AACDJ,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAC,IAAAA,eAAe,CAACO,IAAI,CAACK,UAAN,EAAkBN,KAAK,CAACO,KAAxB,CAAf;AACH,GAHQ,EAGN,CAACP,KAAK,CAACO,KAAP,CAHM,CAAT;AAIA,SAAO,IAAP;AACH;;AACDR,YAAY,CAACH,YAAb,GAA4BA,YAA5B;AACA,eAAeJ,KAAK,CAACgB,IAAN,CAAWT,YAAX,CAAf","sourcesContent":["import * as React from 'react';\nimport { useEffect } from 'react';\nimport { applyReactStyle } from '../utils/apply-react-style';\nimport useControl from './use-control';\nconst defaultProps = {\n    unit: 'metric',\n    maxWidth: 100\n};\nfunction ScaleControl(props) {\n    const ctrl = useControl(({ mapLib }) => new mapLib.ScaleControl(props), {\n        position: props.position\n    });\n    // @ts-ignore\n    if (ctrl.options.unit !== props.unit || ctrl.options.maxWidth !== props.maxWidth) {\n        // @ts-ignore\n        ctrl.options.maxWidth = props.maxWidth;\n        // This method will trigger an update\n        ctrl.setUnit(props.unit);\n    }\n    useEffect(() => {\n        // @ts-ignore\n        applyReactStyle(ctrl._container, props.style);\n    }, [props.style]);\n    return null;\n}\nScaleControl.defaultProps = defaultProps;\nexport default React.memo(ScaleControl);\n//# sourceMappingURL=scale-control.js.map"]},"metadata":{},"sourceType":"module"}