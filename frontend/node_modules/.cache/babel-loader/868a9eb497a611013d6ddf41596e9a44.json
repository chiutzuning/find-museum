{"ast":null,"code":"import * as React from 'react';\nimport { useContext, useEffect, useMemo, useState, useRef } from 'react';\nimport { cloneElement } from 'react';\nimport { MapContext } from './map';\nimport assert from '../utils/assert';\nimport { deepEqual } from '../utils/deep-equal';\nlet sourceCounter = 0;\n\nfunction createSource(map, id, props) {\n  // @ts-ignore\n  if (map.style && map.style._loaded) {\n    const options = { ...props\n    };\n    delete options.id;\n    delete options.children; // @ts-ignore\n\n    map.addSource(id, options);\n    return map.getSource(id);\n  }\n\n  return null;\n}\n/* eslint-disable complexity */\n\n\nfunction updateSource(source, props, prevProps) {\n  assert(props.id === prevProps.id, 'source id changed');\n  assert(props.type === prevProps.type, 'source type changed');\n  let changedKey = '';\n  let changedKeyCount = 0;\n\n  for (const key in props) {\n    if (key !== 'children' && key !== 'id' && !deepEqual(prevProps[key], props[key])) {\n      changedKey = key;\n      changedKeyCount++;\n    }\n  }\n\n  if (!changedKeyCount) {\n    return;\n  }\n\n  const type = props.type;\n\n  if (type === 'geojson') {\n    source.setData(props.data);\n  } else if (type === 'image') {\n    source.updateImage({\n      url: props.url,\n      coordinates: props.coordinates\n    });\n  } else if ((type === 'canvas' || type === 'video') && changedKeyCount === 1 && changedKey === 'coordinates') {\n    source.setCoordinates(props.coordinates);\n  } else if (type === 'vector' && 'setUrl' in source) {\n    // Added in 1.12.0:\n    // vectorTileSource.setTiles\n    // vectorTileSource.setUrl\n    switch (changedKey) {\n      case 'url':\n        source.setUrl(props.url);\n        break;\n\n      case 'tiles':\n        source.setTiles(props.tiles);\n        break;\n\n      default:\n    }\n  } else {\n    // eslint-disable-next-line\n    console.warn(`Unable to update <Source> prop: ${changedKey}`);\n  }\n}\n/* eslint-enable complexity */\n\n\nfunction Source(props) {\n  const map = useContext(MapContext).map.getMap();\n  const propsRef = useRef(props);\n  const [, setStyleLoaded] = useState(0);\n  const id = useMemo(() => props.id || `jsx-source-${sourceCounter++}`, []);\n  useEffect(() => {\n    if (map) {\n      const forceUpdate = () => setStyleLoaded(version => version + 1);\n\n      map.on('styledata', forceUpdate);\n      forceUpdate();\n      return () => {\n        map.off('styledata', forceUpdate); // Parent effects are destroyed before child ones, see\n        // https://github.com/facebook/react/issues/16728\n        // Source can only be removed after all child layers are removed\n\n        /* global setTimeout */\n\n        setTimeout(() => {\n          // @ts-ignore\n          if (map.style && map.style._loaded && map.getSource(id)) {\n            map.removeSource(id);\n          }\n        }, 0);\n      };\n    }\n\n    return undefined;\n  }, [map]); // @ts-ignore\n\n  let source = map && map.style && map.getSource(id);\n\n  if (source) {\n    updateSource(source, props, propsRef.current);\n  } else {\n    source = createSource(map, id, props);\n  }\n\n  propsRef.current = props;\n  return source && React.Children.map(props.children, child => child && cloneElement(child, {\n    source: id\n  })) || null;\n}\n\nexport default Source;","map":{"version":3,"sources":["/Users/genie/code/chiutzuning/find-museum-app/frontend/node_modules/react-map-gl/dist/esm/components/source.js"],"names":["React","useContext","useEffect","useMemo","useState","useRef","cloneElement","MapContext","assert","deepEqual","sourceCounter","createSource","map","id","props","style","_loaded","options","children","addSource","getSource","updateSource","source","prevProps","type","changedKey","changedKeyCount","key","setData","data","updateImage","url","coordinates","setCoordinates","setUrl","setTiles","tiles","console","warn","Source","getMap","propsRef","setStyleLoaded","forceUpdate","version","on","off","setTimeout","removeSource","undefined","current","Children","child"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useContext, useEffect, useMemo, useState, useRef } from 'react';\nimport { cloneElement } from 'react';\nimport { MapContext } from './map';\nimport assert from '../utils/assert';\nimport { deepEqual } from '../utils/deep-equal';\nlet sourceCounter = 0;\nfunction createSource(map, id, props) {\n    // @ts-ignore\n    if (map.style && map.style._loaded) {\n        const options = { ...props };\n        delete options.id;\n        delete options.children;\n        // @ts-ignore\n        map.addSource(id, options);\n        return map.getSource(id);\n    }\n    return null;\n}\n/* eslint-disable complexity */\nfunction updateSource(source, props, prevProps) {\n    assert(props.id === prevProps.id, 'source id changed');\n    assert(props.type === prevProps.type, 'source type changed');\n    let changedKey = '';\n    let changedKeyCount = 0;\n    for (const key in props) {\n        if (key !== 'children' && key !== 'id' && !deepEqual(prevProps[key], props[key])) {\n            changedKey = key;\n            changedKeyCount++;\n        }\n    }\n    if (!changedKeyCount) {\n        return;\n    }\n    const type = props.type;\n    if (type === 'geojson') {\n        source.setData(props.data);\n    }\n    else if (type === 'image') {\n        source.updateImage({ url: props.url, coordinates: props.coordinates });\n    }\n    else if ((type === 'canvas' || type === 'video') &&\n        changedKeyCount === 1 &&\n        changedKey === 'coordinates') {\n        source.setCoordinates(props.coordinates);\n    }\n    else if (type === 'vector' && 'setUrl' in source) {\n        // Added in 1.12.0:\n        // vectorTileSource.setTiles\n        // vectorTileSource.setUrl\n        switch (changedKey) {\n            case 'url':\n                source.setUrl(props.url);\n                break;\n            case 'tiles':\n                source.setTiles(props.tiles);\n                break;\n            default:\n        }\n    }\n    else {\n        // eslint-disable-next-line\n        console.warn(`Unable to update <Source> prop: ${changedKey}`);\n    }\n}\n/* eslint-enable complexity */\nfunction Source(props) {\n    const map = useContext(MapContext).map.getMap();\n    const propsRef = useRef(props);\n    const [, setStyleLoaded] = useState(0);\n    const id = useMemo(() => props.id || `jsx-source-${sourceCounter++}`, []);\n    useEffect(() => {\n        if (map) {\n            const forceUpdate = () => setStyleLoaded(version => version + 1);\n            map.on('styledata', forceUpdate);\n            forceUpdate();\n            return () => {\n                map.off('styledata', forceUpdate);\n                // Parent effects are destroyed before child ones, see\n                // https://github.com/facebook/react/issues/16728\n                // Source can only be removed after all child layers are removed\n                /* global setTimeout */\n                setTimeout(() => {\n                    // @ts-ignore\n                    if (map.style && map.style._loaded && map.getSource(id)) {\n                        map.removeSource(id);\n                    }\n                }, 0);\n            };\n        }\n        return undefined;\n    }, [map]);\n    // @ts-ignore\n    let source = map && map.style && map.getSource(id);\n    if (source) {\n        updateSource(source, props, propsRef.current);\n    }\n    else {\n        source = createSource(map, id, props);\n    }\n    propsRef.current = props;\n    return ((source &&\n        React.Children.map(props.children, child => child &&\n            cloneElement(child, {\n                source: id\n            }))) ||\n        null);\n}\nexport default Source;\n//# sourceMappingURL=source.js.map"]},"metadata":{},"sourceType":"module"}