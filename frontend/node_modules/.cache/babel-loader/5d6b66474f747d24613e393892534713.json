{"ast":null,"code":"import { useContext, useMemo, useEffect } from 'react';\nimport { MapContext } from './map';\nexport default function useControl(onCreate, onRemove, opts) {\n  const context = useContext(MapContext);\n  const ctrl = useMemo(() => onCreate(context), []);\n  useEffect(() => {\n    const {\n      map\n    } = context;\n\n    if (!map.hasControl(ctrl)) {\n      map.addControl(ctrl, (opts || onRemove)?.position);\n    }\n\n    return () => {\n      if (typeof onRemove === 'function') {\n        onRemove(context);\n      } // Map might have been removed (parent effects are destroyed before child ones)\n\n\n      if (map.hasControl(ctrl)) {\n        map.removeControl(ctrl);\n      }\n    };\n  }, []);\n  return ctrl;\n}","map":{"version":3,"sources":["/Users/genie/code/chiutzuning/find-museum-app/frontend/node_modules/react-map-gl/dist/esm/components/use-control.js"],"names":["useContext","useMemo","useEffect","MapContext","useControl","onCreate","onRemove","opts","context","ctrl","map","hasControl","addControl","position","removeControl"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,OAArB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,eAAe,SAASC,UAAT,CAAoBC,QAApB,EAA8BC,QAA9B,EAAwCC,IAAxC,EAA8C;AACzD,QAAMC,OAAO,GAAGR,UAAU,CAACG,UAAD,CAA1B;AACA,QAAMM,IAAI,GAAGR,OAAO,CAAC,MAAMI,QAAQ,CAACG,OAAD,CAAf,EAA0B,EAA1B,CAApB;AACAN,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAAEQ,MAAAA;AAAF,QAAUF,OAAhB;;AACA,QAAI,CAACE,GAAG,CAACC,UAAJ,CAAeF,IAAf,CAAL,EAA2B;AACvBC,MAAAA,GAAG,CAACE,UAAJ,CAAeH,IAAf,EAAqB,CAACF,IAAI,IAAID,QAAT,GAAoBO,QAAzC;AACH;;AACD,WAAO,MAAM;AACT,UAAI,OAAOP,QAAP,KAAoB,UAAxB,EAAoC;AAChCA,QAAAA,QAAQ,CAACE,OAAD,CAAR;AACH,OAHQ,CAIT;;;AACA,UAAIE,GAAG,CAACC,UAAJ,CAAeF,IAAf,CAAJ,EAA0B;AACtBC,QAAAA,GAAG,CAACI,aAAJ,CAAkBL,IAAlB;AACH;AACJ,KARD;AASH,GAdQ,EAcN,EAdM,CAAT;AAeA,SAAOA,IAAP;AACH","sourcesContent":["import { useContext, useMemo, useEffect } from 'react';\nimport { MapContext } from './map';\nexport default function useControl(onCreate, onRemove, opts) {\n    const context = useContext(MapContext);\n    const ctrl = useMemo(() => onCreate(context), []);\n    useEffect(() => {\n        const { map } = context;\n        if (!map.hasControl(ctrl)) {\n            map.addControl(ctrl, (opts || onRemove)?.position);\n        }\n        return () => {\n            if (typeof onRemove === 'function') {\n                onRemove(context);\n            }\n            // Map might have been removed (parent effects are destroyed before child ones)\n            if (map.hasControl(ctrl)) {\n                map.removeControl(ctrl);\n            }\n        };\n    }, []);\n    return ctrl;\n}\n//# sourceMappingURL=use-control.js.map"]},"metadata":{},"sourceType":"module"}